<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="using dlHelper|Win32">
      <Configuration>using dlHelper</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="using dlHelper|x64">
      <Configuration>using dlHelper</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="using import lib|Win32">
      <Configuration>using import lib</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="using import lib|x64">
      <Configuration>using import lib</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{80566FA5-2C4D-4D69-8B9F-D6E81D7D5A2F}</ProjectGuid>
    <RootNamespace>common</RootNamespace>
    <ProjectName>_common</ProjectName>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <PlatformToolset>v140</PlatformToolset>
    <ConfigurationType>Utility</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="x86.props" Condition="'$(Platform)'=='Win32'" />
    <Import Project="x64.props" Condition="'$(Platform)'=='x64'" />
    <Import Project="Release.props" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'Release'))" />
    <Import Project="Debug.props" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'Debug'))" />
    <Import Project="Common.props" />
    <Import Project="DlHelper.props" Condition="!$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'using import lib'))" />
    <Import Project="ImportLib.props" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'using import lib'))" />
  </ImportGroup>
  <ItemGroup>
    <CustomBuild Include="generate_import_lib.txt">
      <Message Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'using import lib'))">Generating Import Lib</Message>
      <Command Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'using import lib'))">lib /nologo /def:..\..\lib\MyScriptEngine.def /machine:$(ARCH) /out:"$(LIB_DIR)\MyScriptEngine.lib"</Command>
      <Outputs Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'using import lib'))">$(LIB_DIR)\MyScriptEngine.lib;$(LIB_DIR)\MyScriptEngine.exp;%(Outputs)</Outputs>
      <AdditionalInputs Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(Configuration)', 'using import lib'))">..\..\lib\MyScriptEngine.def</AdditionalInputs>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>
