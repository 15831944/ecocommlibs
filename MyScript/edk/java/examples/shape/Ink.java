package shape;

/**
 * We did want to emphasize the usage of MyScriptShape, not how to load ink
 * from a file. This is why we hard coded the digital ink data in this class.
 */
public class Ink
{
  /**
   * ,--------.
   * |        |
   * |        |
   * '--------'
   */
  static final float[][] RECTANGLE =
  {
    // stroke 0
    {
      // x, y
      2869.18f, 1977.23f,
      2835.84f, 1977.23f,
      2780.29f, 1961.89f,
      2702.52f, 1938.87f,
      2580.29f, 1908.19f,
      2446.97f, 1869.83f,
      2291.42f, 1839.14f,
      2135.87f, 1816.13f,
      1969.21f, 1808.45f,
      1824.77f, 1800.79f,
      1702.55f, 1800.79f,
      1602.55f, 1793.11f,
      1524.78f, 1785.44f,
      1469.23f, 1777.77f,
      1435.9f, 1762.43f,
      1435.9f, 1754.75f,
      1435.9f, 1747.08f
    },

    // stroke 1
    {
      // x, y
      1426.93f, 1772.15f,
      1449.94f, 1772.15f,
      1449.94f, 1795.17f,
      1449.94f, 1841.2f,
      1438.43f, 1910.24f,
      1415.42f, 2002.3f,
      1380.9f, 2117.38f,
      1357.88f, 2255.47f,
      1323.36f, 2405.06f,
      1300.35f, 2543.15f,
      1265.82f, 2669.74f,
      1242.81f, 2773.3f,
      1231.3f, 2842.35f,
      1219.79f, 2876.87f,
      1219.79f, 2899.88f,
      1231.3f, 2899.88f,
      1242.81f, 2899.88f
    },

    // stroke 2
    {
      // x, y
      1334.87f, 2865.36f,
      1311.85f, 2865.36f,
      1311.85f, 2876.87f,
      1357.88f, 2888.38f,
      1426.93f, 2899.88f,
      1518.99f, 2922.9f,
      1645.57f, 2945.91f,
      1806.67f, 2968.93f,
      1979.29f, 2991.94f,
      2151.9f, 3003.45f,
      2336.02f, 3014.96f,
      2508.63f, 3026.47f,
      2658.23f, 3037.97f,
      2784.81f, 3060.99f,
      2876.87f, 3072.5f
    },

    // stroke 3
    {
      // x, y
      2807.82f, 1979.29f,
      2807.82f, 2059.84f,
      2807.82f, 2151.9f,
      2796.32f, 2289.99f,
      2796.32f, 2462.6f,
      2784.81f, 2646.72f,
      2773.3f, 2830.84f,
      2761.8f, 2980.44f,
      2761.8f, 3072.5f,
      2761.8f, 3130.03f
    }
  };

  /**
   * ------>
   */
  static final float[][] ARROW =
  {
    // stroke 0
    {
      // x, y
      2843.05f, 2695.33f,
      2830.8f, 2695.33f,
      2855.31f, 2695.33f,
      2892.05f, 2683.71f,
      2953.3f, 2672.09f,
      3039.03f, 2660.46f,
      3149.27f, 2637.22f,
      3284.01f, 2613.97f,
      3798.46f, 2555.86f,
      3994.43f, 2544.24f,
      4165.91f, 2520.99f,
      4337.39f, 2486.13f,
      4484.37f, 2451.26f,
      4619.11f, 2416.39f,
      4704.85f, 2393.15f,
      4790.59f, 2369.9f,
      4839.58f, 2369.9f,
    },

    // stroke 1
    {
      // x, y
      4482.19f, 2144.29f,
      4493.7f, 2144.29f,
      4516.71f, 2144.29f,
      4539.73f, 2155.8f,
      4562.74f, 2167.31f,
      4597.27f, 2190.32f,
      4643.3f, 2213.34f,
      4700.83f, 2236.35f,
      4781.39f, 2259.37f,
      4873.45f, 2293.89f,
      5034.55f, 2339.92f,
      5069.07f, 2362.94f,
      5080.58f, 2374.44f,
      5080.58f, 2397.46f,
      5034.55f, 2420.47f,
      4907.97f, 2489.52f,
      4838.92f, 2524.04f
    }
  };

  /**
   *   ,---.
   *  /     \
   * |       |
   *  \     /
   *   '---'
   */
  static final float[][] CIRCLE=
  {
    // stroke 0
    {
      // x, y
      6110.47f, 1818.18f,
      6029.92f, 1760.64f,
      5972.38f, 1737.63f,
      5903.34f, 1726.12f,
      5822.78f, 1726.12f,
      5742.23f, 1737.63f,
      5650.17f, 1783.66f,
      5569.62f, 1852.7f,
      5489.07f, 1944.76f,
      5408.52f, 2059.84f,
      5350.98f, 2186.42f,
      5293.44f, 2336.02f,
      5258.92f, 2474.11f,
      5258.92f, 2612.2f,
      5281.93f, 2738.78f,
      5362.49f, 2853.85f,
      5466.05f, 2945.91f,
      5604.14f, 3014.96f,
      5765.25f, 3049.48f,
      5914.84f, 3060.99f,
      6075.95f, 3037.97f,
      6214.04f, 2968.93f,
      6340.62f, 2876.87f,
      6432.68f, 2738.78f,
      6501.73f, 2577.68f,
      6524.74f, 2393.56f,
      6524.74f, 2209.44f,
      6501.73f, 2059.84f,
      6432.68f, 1944.76f,
      6352.13f, 1852.7f,
      6248.56f, 1795.17f,
      6156.5f, 1760.64f,
      6064.44f, 1749.14f,
      5983.89f, 1749.14f,
      5903.34f, 1772.15f
    }
  };

  /**
   *    .
   *   / \
   *  /   \
   * '-----'
   */
  static final float[][] TRIANGLE =
  {
    // stroke 0
    {
      // x, y
      4314.86f, 3235.35f,
      4314.86f, 3232.16f,
      4314.86f, 3228.96f,
      4314.86f, 3225.77f,
      4311.67f, 3225.77f,
      4305.28f, 3225.77f,
      4298.89f, 3232.16f,
      4292.51f, 3238.54f,
      4279.73f, 3248.12f,
      4254.18f, 3276.87f,
      4235.02f, 3292.84f,
      4199.89f, 3337.55f,
      4180.72f, 3366.3f,
      4161.56f, 3395.04f,
      4142.4f, 3423.78f,
      4120.04f, 3455.72f,
      4100.88f, 3487.66f,
      4078.52f, 3516.41f,
      4059.36f, 3545.15f,
      4040.19f, 3570.7f,
      4021.03f, 3596.25f,
      4001.87f, 3618.61f,
      3982.7f, 3640.97f,
      3966.74f, 3660.13f,
      3950.77f, 3679.29f,
      3934.8f, 3695.26f,
      3918.83f, 3711.23f,
      3902.86f, 3727.2f,
      3886.89f, 3739.97f,
      3870.92f, 3755.94f,
      3854.95f, 3771.91f,
      3838.98f, 3787.88f,
      3826.21f, 3800.66f,
      3813.43f, 3813.43f,
      3807.04f, 3823.01f,
      3797.46f, 3832.59f,
      3794.27f, 3838.98f,
      3791.08f, 3845.37f,
      3787.88f, 3848.56f,
      3787.88f, 3851.76f,
      3787.88f, 3854.95f,
      3794.27f, 3854.95f,
      3800.66f, 3854.95f,
      3810.24f, 3854.95f,
      3819.82f, 3854.95f,
      3829.4f, 3858.15f,
      3842.18f, 3861.34f,
      3854.95f, 3861.34f,
      3874.11f, 3861.34f,
      3893.28f, 3861.34f,
      3918.83f, 3861.34f,
      3947.57f, 3861.34f,
      3976.32f, 3861.34f,
      4008.26f, 3858.15f,
      4037, 3854.95f,
      4068.94f, 3854.95f,
      4100.88f, 3851.76f,
      4132.81f, 3851.76f,
      4164.75f, 3851.76f,
      4193.5f, 3851.76f,
      4219.05f, 3851.76f,
      4247.79f, 3851.76f,
      4270.15f, 3851.76f,
      4298.89f, 3851.76f,
      4327.64f, 3851.76f,
      4353.19f, 3851.76f,
      4381.93f, 3851.76f,
      4410.68f, 3848.56f,
      4439.42f, 3848.56f,
      4468.17f, 3845.37f,
      4493.72f, 3845.37f,
      4519.27f, 3842.18f,
      4541.63f, 3842.18f,
      4560.79f, 3838.98f,
      4579.95f, 3835.79f,
      4599.11f, 3832.59f,
      4615.08f, 3829.4f,
      4631.05f, 3826.21f,
      4647.02f, 3823.01f,
      4659.8f, 3819.82f,
      4672.57f, 3816.63f,
      4685.35f, 3816.63f,
      4691.73f, 3813.43f,
      4701.32f, 3813.43f,
      4707.7f, 3813.43f,
      4714.09f, 3813.43f,
      4720.48f, 3813.43f,
      4726.87f, 3813.43f,
      4733.25f, 3813.43f,
      4739.64f, 3813.43f,
      4742.84f, 3810.24f,
      4746.03f, 3810.24f,
      4749.22f, 3807.04f,
      4752.42f, 3803.85f,
      4755.61f, 3803.85f,
      4755.61f, 3800.66f,
      4755.61f, 3797.46f,
      4758.81f, 3791.08f,
      4758.81f, 3784.69f,
      4758.81f, 3775.11f,
      4755.61f, 3765.52f,
      4749.22f, 3749.56f,
      4742.84f, 3736.78f,
      4730.06f, 3717.62f,
      4717.29f, 3698.45f,
      4701.32f, 3672.9f,
      4682.15f, 3647.35f,
      4662.99f, 3618.61f,
      4637.44f, 3589.86f,
      4608.7f, 3557.93f,
      4579.95f, 3525.99f,
      4548.01f, 3497.24f,
      4519.27f, 3465.3f,
      4493.72f, 3436.56f,
      4471.36f, 3407.82f,
      4449, 3382.26f,
      4429.84f, 3353.52f,
      4410.68f, 3327.97f,
      4391.52f, 3305.61f,
      4375.55f, 3283.26f,
      4365.96f, 3264.09f,
      4356.38f, 3248.12f,
      4350, 3235.35f,
      4343.61f, 3228.96f,
      4340.41f, 3228.96f
    }
  };

  /**
   *    ,----
   * ---
   */
  static final float[][] LINE =
  {
    // stroke 0
    {
      // x, y
      2843.05f, 2695.33f,
      2830.8f, 2695.33f,
      2855.31f, 2695.33f,
      2892.05f, 2683.71f,
      2953.3f, 2672.09f,
      3039.03f, 2660.46f,
      3149.27f, 2637.22f,
      3284.01f, 2613.97f,
      3798.46f, 2555.86f,
      3994.43f, 2544.24f,
      4165.91f, 2520.99f,
      4337.39f, 2486.13f,
      4484.37f, 2451.26f,
      4619.11f, 2416.39f,
      4704.85f, 2393.15f,
      4790.59f, 2369.9f,
      4839.58f, 2369.9f,
    }
  };

  /**
   * >
   */
  static final float[][] ARROW_HEAD =
  {
    // stroke 0
    {
      // x, y
      4482.19f, 2448.29f,
      4493.7f, 2448.29f,
      4516.71f, 2448.29f,
      4539.73f, 2459.8f,
      4562.74f, 2471.31f,
      4597.27f, 2494.32f,
      4643.3f, 2517.34f,
      4700.83f, 2540.35f,
      4781.39f, 2563.37f,
      4873.45f, 2597.89f,
      5034.55f, 2643.92f,
      5069.07f, 2666.94f,
      5080.58f, 2678.44f,
      5080.58f, 2701.46f,
      5034.55f, 2724.47f,
      4907.97f, 2793.52f,
      4838.92f, 2828.04f
    }
  };

  /**
   * ,-------------
   * |      |
   * |      |
   * '------'
   */
  static final float[][] SCRATCH_OUT =
  {
    // stroke 0
    {
      // x, y
      960, 93,
      958, 93,
      955, 93,
      950, 93,
      945, 93,
      938, 95,
      932, 96,
      926, 97,
      918, 98,
      914, 100,
      909, 101,
      901, 102,
      893, 103,
      881, 105,
      870, 105,
      832, 107,
      817, 108,
      799, 108,
      786, 108,
      773, 108,
      759, 108,
      748, 108,
      738, 108,
      729, 108,
      719, 110,
      709, 110,
      699, 111,
      691, 111,
      682, 113,
      672, 114,
      664, 114,
      654, 115,
      648, 115,
      644, 116,
      639, 116,
      636, 118,
      633, 118,
      630, 119,
      628, 119,
      626, 119,
      626, 120,
      626, 121,
      626, 122,
      626, 124,
      626, 126,
      625, 128,
      625, 130,
      625, 132,
      625, 135,
      623, 144,
      623, 148,
      623, 152,
      623, 158,
      623, 162,
      622, 167,
      622, 173,
      622, 177,
      622, 183,
      622, 187,
      622, 193,
      622, 200,
      622, 206,
      622, 214,
      622, 220,
      621, 228,
      621, 234,
      621, 240,
      620, 246,
      620, 250,
      620, 255,
      620, 258,
      620, 261,
      618, 267,
      618, 270,
      618, 271,
      618, 272,
      618, 274,
      618, 275,
      618, 276,
      618, 277,
      618, 279,
      618, 280,
      618, 282,
      618, 283,
      618, 284,
      618, 286,
      618, 289,
      618, 291,
      618, 294,
      618, 301,
      618, 304,
      618, 310,
      618, 313,
      618, 314,
      618, 316,
      618, 318,
      618, 319,
      619, 320,
      619, 321,
      619, 322,
      620, 323,
      620, 324,
      620, 325,
      621, 325,
      621, 326,
      622, 328,
      622, 329,
      622, 330,
      622, 331,
      622, 332,
      623, 333,
      623, 334,
      623, 335,
      624, 335,
      625, 335,
      626, 335,
      626, 336,
      628, 336,
      631, 336,
      636, 336,
      640, 336,
      649, 336,
      655, 336,
      660, 336,
      666, 336,
      674, 336,
      680, 336,
      688, 336,
      696, 336,
      704, 338,
      711, 338,
      717, 338,
      725, 338,
      729, 338,
      735, 338,
      739, 338,
      744, 338,
      754, 338,
      758, 338,
      761, 338,
      766, 338,
      770, 338,
      773, 338,
      777, 338,
      782, 338,
      785, 338,
      788, 339,
      792, 339,
      795, 339,
      798, 339,
      803, 339,
      806, 339,
      809, 339,
      812, 339,
      815, 339,
      818, 339,
      820, 339,
      822, 339,
      823, 339,
      824, 339,
      825, 339,
      826, 339,
      827, 339,
      829, 339,
      830, 339,
      832, 339,
      833, 339,
      835, 339,
      836, 339,
      838, 339,
      839, 339,
      840, 339,
      841, 339,
      842, 339,
      843, 339,
      843, 338,
      844, 338,
      846, 337,
      847, 336,
      849, 336,
      850, 335,
      851, 335,
      851, 334,
      851, 332,
      852, 330,
      852, 326,
      854, 321,
      856, 313,
      857, 309,
      859, 302,
      860, 296,
      861, 290,
      863, 282,
      864, 276,
      865, 266,
      868, 258,
      869, 248,
      872, 238,
      874, 228,
      875, 218,
      875, 210,
      875, 204,
      875, 198,
      875, 192,
      875, 188,
      875, 184,
      875, 181,
      875, 176,
      875, 173,
      875, 170,
      875, 162,
      875, 158,
      874, 149,
      874, 146,
      874, 143,
      874, 140,
      873, 138,
      873, 135,
      873, 133,
      873, 132,
      872, 128,
      872, 127,
      872, 126,
      871, 124,
      871, 123,
      871, 121,
      871, 120,
      870, 119,
      870, 117,
      870, 115,
      870, 114,
      870, 112,
      869, 111
    },

    // stroke 1
    {
      // x, y
      876, 123,
      877, 123,
      878, 121,
      879, 119,
      881, 116,
      883, 111,
      885, 108,
      888, 104,
      890, 99,
      892, 94,
      897, 84,
      898, 81,
      899, 79,
      900, 77,
      900, 78,
      900, 80,
      900, 82,
      900, 85,
      901, 88,
      901, 91,
      901, 94,
      901, 97,
      901, 105,
      901, 106,
      901, 107,
      902, 107,
      903, 107,
      904, 106,
      905, 104,
      906, 102,
      907, 101,
      908, 97,
      909, 95,
      909, 92,
      910, 92,
      910, 90,
      910, 89,
      911, 94,
      911, 97,
      911, 103,
      911, 106,
      911, 109,
      910, 111,
      910, 112,
      910, 113,
      910, 112,
      910, 110,
      910, 108,
      912, 106,
      913, 103,
      915, 101,
      916, 98,
      918, 96,
      919, 95,
      920, 93,
      920, 94,
      920, 99,
      920, 101,
      920, 108,
      920, 110,
      918, 113,
      918, 115,
      918, 117,
      917, 118,
      918, 118,
      919, 118,
      920, 117,
      922, 115,
      924, 112,
      926, 110,
      928, 107,
      930, 105,
      931, 103,
      932, 101,
      932, 102,
      932, 107,
      932, 110,
      930, 116,
      929, 118,
      928, 120,
      927, 122,
      926, 122,
      927, 120,
      929, 117,
      930, 112,
      932, 107,
      935, 103,
      937, 98,
      939, 93,
      942, 89,
      943, 87,
      944, 85,
      944, 87,
      944, 90,
      943, 98,
      942, 102,
      941, 105,
      941, 108,
      940, 111,
      939, 113,
      939, 115,
      940, 115,
      941, 115,
      942, 114,
      943, 112,
      945, 110,
      946, 108,
      948, 104,
      950, 101,
      953, 97,
      953, 95,
      953, 98,
      953, 100,
      952, 102,
      951, 105,
      950, 107,
      948, 109,
      947, 112,
      945, 115,
      944, 116,
      943, 118,
      942, 123,
      941, 125,
      941, 126,
      943, 123,
      944, 119,
      946, 116,
      947, 113,
      949, 110,
      950, 107,
      952, 104,
      953, 102,
      953, 100,
      954, 99
    }
  };

  /**
   *   ,----------.
   *  /            \
   * |              |
   * |              |
   *  \            /
   *   '----------'
   */
  static final float[][] ALMOST_RECTANGLE =
  {
    // stroke 0
    {
      // x, y
      616, 136,
      613, 142,
      610, 148,
      609, 151,
      608, 155,
      607, 160,
      606, 165,
      606, 168,
      605, 174,
      604, 178,
      603, 184,
      603, 187,
      603, 191,
      602, 196,
      602, 200,
      602, 207,
      602, 216,
      602, 222,
      603, 227,
      603, 232,
      604, 235,
      604, 239,
      605, 244,
      607, 247,
      609, 254,
      610, 259,
      611, 262,
      612, 266,
      613, 269,
      614, 272,
      616, 275,
      617, 277,
      619, 280,
      623, 284,
      627, 286,
      633, 289,
      639, 292,
      643, 294,
      649, 297,
      657, 299,
      675, 303,
      697, 308,
      712, 311,
      725, 315,
      737, 316,
      751, 318,
      768, 320,
      784, 323,
      807, 324,
      824, 326,
      832, 326,
      838, 327,
      843, 327,
      848, 327,
      853, 327,
      860, 327,
      873, 328,
      885, 328,
      893, 328,
      900, 328,
      909, 328,
      918, 328,
      924, 328,
      928, 328,
      933, 326,
      936, 324,
      939, 324,
      943, 320,
      949, 316,
      954, 312,
      958, 308,
      962, 305,
      965, 301,
      971, 293,
      974, 290,
      977, 285,
      981, 279,
      984, 273,
      986, 267,
      988, 260,
      990, 253,
      992, 244,
      993, 237,
      993, 229,
      993, 220,
      993, 212,
      993, 205,
      993, 200,
      993, 195,
      993, 189,
      993, 183,
      992, 177,
      991, 172,
      990, 169,
      989, 164,
      987, 160,
      986, 156,
      985, 153,
      983, 149,
      982, 146,
      980, 142,
      979, 138,
      975, 135,
      973, 132,
      968, 128,
      963, 125,
      951, 119,
      942, 116,
      931, 113,
      918, 110,
      903, 106,
      888, 103,
      876, 101,
      866, 100,
      853, 98,
      838, 97,
      827, 96,
      816, 95,
      804, 95,
      791, 95,
      781, 95,
      770, 95,
      760, 95,
      744, 95,
      734, 95,
      722, 95,
      710, 96,
      701, 97,
      692, 99,
      684, 100,
      677, 102,
      669, 104,
      660, 106,
      655, 108,
      646, 111,
      638, 112,
      634, 114,
      629, 115,
      626, 117,
      622, 119,
      620, 120,
      618, 123
    }
  };

  /**
   *              ,---.
   *             /     \
   *   ,---.    |       |
   *  /     \    \     /
   * |       |    '---'
   *  \     /
   *   '---'
   */
  static final float[][] CIRCLES =
  {
    // stroke 0
    {
      // x, y
      5074.8f, 2911.39f,
      4959.72f, 2876.87f,
      4879.17f, 2865.36f,
      4764.1f, 2865.36f,
      4649.02f, 2876.87f,
      4533.95f, 2934.41f,
      4430.38f, 2991.94f,
      4338.32f, 3084,
      4269.27f, 3187.57f,
      4223.25f, 3314.15f,
      4177.21f, 3452.24f,
      4165.71f, 3624.86f,
      4165.71f, 3797.47f,
      4200.23f, 3947.07f,
      4280.78f, 4085.16f,
      4384.35f, 4188.72f,
      4522.44f, 4246.26f,
      4683.54f, 4257.77f,
      4867.66f, 4234.75f,
      5040.28f, 4165.71f,
      5201.38f, 4050.63f,
      5339.47f, 3912.54f,
      5443.04f, 3751.44f,
      5523.59f, 3590.33f,
      5558.11f, 3417.72f,
      5558.11f, 3256.62f,
      5500.58f, 3095.51f,
      5397.01f, 2968.93f,
      5270.43f, 2888.38f,
      5120.83f, 2853.85f,
      4982.74f, 2853.85f,
      4856.16f, 2888.38f,
      4741.08f, 2957.42f,
      4649.02f, 3049.48f
    },

    // stroke 1
    {
      // x, y
      6697.35f, 2623.7f,
      6582.27f, 2589.18f,
      6501.72f, 2577.67f,
      6386.65f, 2577.67f,
      6271.57f, 2589.18f,
      6156.5f, 2646.72f,
      6052.93f, 2704.25f,
      5960.87f, 2796.31f,
      5891.82f, 2899.88f,
      5845.8f, 3026.46f,
      5799.76f, 3164.55f,
      5788.26f, 3337.17f,
      5788.26f, 3509.78f,
      5822.78f, 3659.38f,
      5903.33f, 3797.47f,
      6006.9f, 3901.03f,
      6144.99f, 3958.57f,
      6306.09f, 3970.08f,
      6490.21f, 3947.06f,
      6662.83f, 3878.02f,
      6823.93f, 3762.94f,
      6962.02f, 3624.85f,
      7065.59f, 3463.75f,
      7146.14f, 3302.64f,
      7180.66f, 3130.03f,
      7180.66f, 2968.93f,
      7123.13f, 2807.82f,
      7019.56f, 2681.24f,
      6892.98f, 2600.69f,
      6743.38f, 2566.16f,
      6605.29f, 2566.16f,
      6478.71f, 2600.69f,
      6363.63f, 2669.73f,
      6271.57f, 2761.7f
    }
  };

} // Ink
