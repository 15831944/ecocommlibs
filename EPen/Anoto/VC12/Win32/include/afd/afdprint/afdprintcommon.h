/*****************************************************************************
 * Copyright (c) Anoto AB 2007-2009.
 * All rights reserved. This code is Anoto proprietary and confidential, and
 * may be protected by patents. Any use of the code for whatever purpose is
 * subject to separate license terms and conditions.
 ************************************************************************V30*/

// original author Tommy Sighagen

#ifndef AFDPRINT_COMMON_H
#define AFDPRINT_COMMON_H

// Common includes
#include <os/typedefs.h>
#include <common/anotocommon.h>

#ifdef __cplusplus
extern "C"
{
#endif

#if defined(_WIN32)
	#define PRINT_MODULE_VERSION "2.7.1.0_2"
#elif defined(__APPLE__)
	#define PRINT_MODULE_VERSION "2.5.0.0_2"
#else
	#define PRINT_MODULE_VERSION "2.5.0.0_1"  // Other plattform...ARM, Linux
#endif

// Print API (Both for win32 and OSX, but for OSX only a limited API)

/** \defgroup PrintAPI Print Module
	This is the external print API

	Overview: \ref AFPPrintModule

	The Print Module uses GAPAT, which is a lower level pattern generating component.
	Most of the error codes are generated by gapat and the switches below are applied to it through the
	PM interface.

	Optional params see \ref GapatSwitches

	Return codes see \ref GapatReturnCodes

	If licenses are to be used as input parameters (which is not the normal case) these should be loaded
	by the the License Reader included in the Print Module. This to avoid conflicts with different license
	struct formats and versions.

@{*/
	/** \struct PrinterList
		\brief A collection of printers

		A printer object contains a list and number of printers installed on the system
	@{*/

		struct PrinterList;

	/*@}*/

	/** \defgroup afdPrintCodes Print Return codes and defines
	@{*/

	/** Out of copies */
	#define PRINT_OUT_OF_COPIES -878
	/** Printer device language = PostScript */
	#define AFDPRINT_PDL_PS 0
	/*@}*/


			/** \defgroup afdPrintPaperSizes Print paper sizes and orientation defines
	@{*/

	// Orientation

	/** Orientation portrait */
//	#define AFDPRINT_ORIENT_PORTRAIT	0
	/** Orientation landscape */
//	#define AFDPRINT_ORIENT_LANDSCAPE	1


	//## Paper sizes ##

	/** Use the printers default page size for printing */
	#define AFDPRINT_PAGE_SIZE_PRINTER_DEFAULT		0
	/** Use the page size specified in the afd for printing */
	#define AFDPRINT_PAGE_SIZE_FROM_AFD				1

	/** Letter 8.5 x 11 inch */
	#define AFDPRINT_PAPER_LETTER					2
	/** Legal 8.5 x 14 inch */
	#define AFDPRINT_PAPER_LEGAL					3
	/** Ledger 17 x 11 inch */
	#define AFDPRINT_PAPER_LEDGER					4

	// A size series

	/** A2 paper: 420 x 594 mm */
	#define AFDPRINT_PAPER_A2						5
	/** A3 paper: 297 x 420 mm */
	#define AFDPRINT_PAPER_A3						6
	/** A4 paper: 210 x 297 mm */
	#define AFDPRINT_PAPER_A4						7
	/** A5 paper: 148 x 210 mm */
	#define AFDPRINT_PAPER_A5						8
	/** A6 paper: 105 x 148 mm */
	#define AFDPRINT_PAPER_A6						9

	// B size series

	/** B4 paper: 257 x 364 mm */
	#define AFDPRINT_PAPER_JIS_B4					10
	/** B5 paper: 182 x 257 mm */
	#define AFDPRINT_PAPER_JIS_B5					11
	/** B6 paper: 128 x 182 mm */
	#define AFDPRINT_PAPER_JIS_B6					12

	// landscape

	/** Letter 8.5 x 11 inch */
	#define AFDPRINT_PAPER_LETTER_LANDSCAPE			13
	/** Legal 8.5 x 14 inch */
	#define AFDPRINT_PAPER_LEGAL_LANDSCAPE			14
	/** Ledger 17 x 11 inch */
	#define AFDPRINT_PAPER_LEDGER_LANDSCAPE			15

	// A size series

	/** A2 paper: 420 x 594 mm */
	#define AFDPRINT_PAPER_A2_LANDSCAPE				16
	/** A3 paper: 297 x 420 mm */
	#define AFDPRINT_PAPER_A3_LANDSCAPE				17
	/** A4 paper: 210 x 297 mm */
	#define AFDPRINT_PAPER_A4_LANDSCAPE				18
	/** A5 paper: 148 x 210 mm */
	#define AFDPRINT_PAPER_A5_LANDSCAPE				19
	/** A6 paper: 105 x 148 mm */
	#define AFDPRINT_PAPER_A6_LANDSCAPE				20

	// B size series

	/** B4 paper: 257 x 364 mm */
	#define AFDPRINT_PAPER_JIS_B4_LANDSCAPE			21
	/** B5 paper: 182 x 257 mm */
	#define AFDPRINT_PAPER_JIS_B5_LANDSCAPE			22
	/** B6 paper: 128 x 182 mm */
	#define AFDPRINT_PAPER_JIS_B6_LANDSCAPE			23

	/*@}*/

	struct License;


	// --------  PS API --------

	 s32 afdPrintGeneratePostscript_internal( const char *iAFDfilename,s32 ilStartPage, s32 ilEndPage, s32 ilStartCopy,
		s32 ilEndCopy, const char *iPostscriptfilename, const char *iOptionalparams, struct License **ipaLicenses, s32 ilNbrOfLicenses );

	 s32 afdPrintGeneratePDF_internal( const char *iAFDfilename ,s32 ilStartPage, s32 ilEndPage, s32 ilStartCopy,
		s32 ilEndCopy, const char *iPDFfilename, const char *iOptionalparams, struct License **ipaLicenses, s32 ilNbrOfLicenses );

	 s32 afdPrintGenerateEPS_internal( const char *iAFDfilename, s32 ilPage, s32 ilCopy,
											  const char *iEPSOutputFilename, const char *iOptionalparams,
											   struct License **ipaLicenses, s32 ilNbrOfLicenses);


	// -------- Background API --------

	 s32 afdPrintGenerateBackgroundImages_internal( const char *iAFDfilename, s32 ilStartPage, s32 ilEndPage, const char *iXmldestination,
		const char *iTargetpath, const char *iTargeturl, const char *iOptionalparams, float ifRes1, float ifRes2,
		float ifRes3, struct License **ipaLicenses, s32 ilNbrOfLicenses );

	 s32 afdPrintGenerateAndEmbedBackgroundImages_internal( const char *iAFDfilename, const char *iOptionalparams,
															float ifRes1, float ifRes2, float ifRes3,
															struct License **ipaLicenses, s32 ilNbrOfLicenses );

	 s32 afdPrintGenerateAndEmbedBackgroundImagesVerbose_internal( const char *iAFDfilename, s32 ilStartPage, s32 ilEndPage,
															const char *iOptionalparams,
															float ifRes1, float ifRes2, float ifRes3,
															struct License **ipaLicenses, s32 ilNbrOfLicenses ,
															boolean ieIncludePageInstancesBgs, boolean ieDeleteOldFiles);

	 boolean afdPrintGetModuleVersion_internal(char *opVersionBuf,  s32 ilBufSize);


/*@}*/

	 //  extra

	 s32 afdExecuteGapat( const char *ipInput, s32 ilStartPage, s32 ilEndPage, s32 ilStartCopy, s32 ilEndCopy, const char *outputtype, const char *outputname,
					const char *optionalparams, struct License **ipaLicenses, s32 ilNbrOfLicenses);

	void afdPrintSetArg(char **ioapArgs, s32 *ioplArgc, const char *ipValue);

	void addPageSizeSwitches(char *opAllOptParams, s32 ilPrintPageSize);


#ifdef __cplusplus
}
#endif

#endif
